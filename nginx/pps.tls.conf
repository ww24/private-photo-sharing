# pps.conf for production (https)

upstream pps {
	server unix:/tmp/pps.sock;
	server unix:/tmp/backup.pps.sock backup;
}

map $http_accept $maintenance_page {
	default /maintenance.html;
	~application/json /js/maintenance.html;
}

# redirect http -> https
server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;
	server_name pps.ww24.jp;

	rewrite ^ https://pps.ww24.jp$request_uri? permanent;
}

# main server
server {
	set $documentRoot /Users/ww24/Documents/Git/private-photo-sharing/public;

	listen 443 ssl spdy default_server;
	listen [::]:443 ssl spdy default_server ipv6only=on;
	server_name pps.ww24.jp;

	# SSL
	ssl_certificate /etc/pki/tls/certs/pps.ww24.jp.pem;
	ssl_certificate_key /etc/pki/tls/certs/pps.ww24.jp.pem;
	ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 5m;

	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	ssl_dhparam /etc/pki/tls/certs/dhparam.pem;

	ssl_protocols TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
	ssl_prefer_server_ciphers on;

	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;
	## verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /etc/pki/tls/certs/startssl.ca.pem;

	# security options
	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security max-age=15768000;
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; img-src 'self' pbs.twimg.com; style-src 'self' 'unsafe-inline'";

	# max upload size
	client_max_body_size 50M;

	root $documentRoot;

	location / {
		try_files $uri $uri/index.html @pps;
	}

	# reverse proxy
	location @pps {
		keepalive_timeout 0;
		proxy_pass http://pps;
		proxy_redirect http:// https://;
	}

	# static route
	location ~^/favicon\.ico|(js|css|fonts|img|photos|thumbs)/ {
		keepalive_timeout 30;
		expires 1w;

		# download
		if ($arg_download = true) {
		  add_header Content-Type application/octet-stream;
		}
	}
}

# backup server
server {
	set $documentRoot /Users/ww24/Documents/Git/private-photo-sharing/public;

	listen unix:/tmp/backup.pps.sock;

	root $documentRoot;

	error_page 503 $maintenance_page;

	location / {
		try_files $uri =503;
	}
}
